def bot_response(user_input):
    user_input = user_input.lower() #Convert the users input to all lowercase letters
    sentence_list.append(user_input) #Append the users response to the list of sentence tokens
    bot_response =' ' #Create an empty response for the bot
    cm = CountVectorizer().fit_transform(sentence_list) #Create the count matrix
    similarity_scores = cosine_similarity(cm[-1], cm) #Get the similarity scores to the users input
    flatten = similarity_scores.flatten() #Reduce the dimensionality of the similarity scores
    index = index_sort(flatten) #Sort the index from 
    index = index[1:] #Get all of the similarity scores except the first (the query itself)
    response_flag=0 #Set a flag letting us know if the text contains a similarity score greater than 0.0
    #Loop the through the index list and get the 'n' number of sentences as the response
    j = 0
    for i in range(0, len(index)):
      if flatten[index[i]] > 0.0:
        bot_response = bot_response+' '+sentence_list[index[i]]
        response_flag = 1
        j = j+1
      if j > 2:
        break  
    #if no sentence contains a similarity score greater than 0.0 then print 'I apologize, I don't understand'
    if(response_flag==0):
        bot_response = bot_response+' '+"I apologize, I don't understand."
    sentence_list.remove(user_input) #Remove the users response from the sentence tokens
       
    return bot_response
